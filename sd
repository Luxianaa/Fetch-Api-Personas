const API_URL = "http://127.0.0.1:8000/api";

document.getElementById("btnLogin")?.addEventListener("click", async () => {
  const email = document.getElementById("email").value;
  const password = document.getElementById("password").value;

  try {
    const res = await fetch(`${API_URL}/login`, {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        Accept: "application/json",
      },
      body: JSON.stringify({
        email: email,
        password: password,
      }),
    });
    const token = await res.json();
    if (res.ok) {
      localStorage.setItem("token", token.token);
      window.location.href = "crud.html";
    }
  } catch (error) {
    console.error("Error:", error);
  }
});

async function listarPersonas() {
  const token = localStorage.getItem("token");
  try {
    const res = await fetch(`${API_URL}/personas`, {
      method: "GET",
      headers: {
        "Content-Type": "application/json",
        Accept: "application/json",
        Authorization: `Bearer ${token}`,
      },
    });
    if (!res.ok) throw new Error("Error con listar las personas");
    const personas = await res.json();
    let html = `
      <h2> Listado de todas las personas</h2>
      <table border=1>
        <thead>
          <tr>
            <th>id</th>
            <th>Nombre</th>
            <th>Apellido</th>
            <th>Carnet</th>
            <th>Direccion</th>
            <th>Telf</th>
            <th>Email</th>
            <th>Acciones</th>
          </tr>
        </thead>
      <tbody>
      `;
    personas.forEach((persona) => {
      html += `
          <tr>
          <td>${persona.id}</td>
          <td>${persona.nombre} </td>
          <td>${persona.apellido}</td>
          <td>${persona.ci} </td>
          <td>${persona.direccion} </td>
          <td>${persona.telefono}</td>
          <td>${persona.email}</td>
          <td>
            <button class="btn btn-warning" onclick="mostrarFormularioEditar(${persona.id})">Editar</button>
            <button class="btn btn-danger" onclick="eliminarPersona(${persona.id})   ">Eliminar</button>
            </td>
          </tr>
        `;
    });

    html += `
    </tbody>
        </table>
        `;
    document.getElementById("container").innerHTML = html;
  } catch (error) {
    console.error("Error:", error);
    alert("No se puede cargar personas");
  }
}
document.getElementById("btnCargar")?.addEventListener("click", listarPersonas);
document.getElementById("btnCrear")?.addEventListener("click", () => {
  formCrear();
});
function formCrear() {
  const html = `
  <h2>Nueva Persona</h2>
  <form id="formPersona" style="display: flex; flex-direction: column; gap: 10px; max-width: 400px; margin: auto;">
    <label for="nombre">Nombre:</label>
    <input type="text" id="nombre">
    <label for="apellido">Apellido:</label>
    <input type="text" id="apellido">
    <label for="ci">Carnet:</label>
    <input type="text" id="ci">
    <label for="direccion">Direccion:</label>
    <input type="text" id="direccion">
    <label for="telefono">Telefono:</label>
    <input type="text" id="telefono">
    <label for="email">Email:</label>
    <input type="email" id="email">
    <div>
        <button type="submit">Crear</button>
        <button type="button" id="btnCancelar">Cancelar</button>
    </div>
</form>
  `;
  document.getElementById("container").innerHTML = html;
  document
    .getElementById("formPersona")
    .addEventListener("submit", crearPersona);
  document.getElementById("btnCancelar").addEventListener("click", () => {
    document.getElementById("container").innerHTML = "";
  });
}
// Función para crear persona
async function crearPersona(event) {
  event.preventDefault();

  const token = localStorage.getItem("token");
  const persona = {
    nombre: document.getElementById("nombre").value,
    apellido: document.getElementById("apellido").value,
    ci: document.getElementById("ci").value,
    direccion: document.getElementById("direccion").value,
    telefono: document.getElementById("telefono").value,
    email: document.getElementById("email").value,
  };

  try {
    const res = await fetch(`${API_URL}/personas`, {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        Accept: "application/json",
        Authorization: `Bearer ${token}`,
      },
      body: JSON.stringify(persona),
    });

    const data = await res.json(); 
    console.log("Respuesta de la API:", data); 
    console.log("Status:", res.status);

    if (!res.ok) throw new Error("Error al crear la persona");

    alert("Persona creada exitosamente");
    listarPersonas();
  } catch (error) {
    console.error("Error:", error);
    alert("No se pudo crear la persona");
  }
}

async function eliminarPersona(id) {
  if (!confirm("¿Está seguro de eliminar esta persona?")) {
    return;
  }

  const token = localStorage.getItem("token");
  try {
    const res = await fetch(`${API_URL}/personas/${id}`, {
      method: "DELETE",
      headers: {
        "Content-Type": "application/json",
        Accept: "application/json",
        Authorization: `Bearer ${token}`,
      },
    });

    console.log("Status:", res.status);

    if (!res.ok) {
      throw new Error("No se pudo eliminar a persona");
    }

    const contentType = res.headers.get("content-type");
    if (contentType && contentType.includes("application/json")) {
      const data = await res.json();
      console.log("api respuesta", data);
    }

    alert("Persona eliminada exitosamente");
    listarPersonas();
  } catch (error) {
    console.error("Error", error);
    alert("No se pudo eliminar: " + error.message);
  }
}
async function mostrarFormularioEditar(id) {
  const token = localStorage.getItem("token");
  try {
    const res = await fetch(`${API_URL}/personas/${encodeURIComponent(id)}`, {
      method: "GET",
      headers: {
        "Content-Type": "application/json",
        Accept: "application/json",
        Authorization: `Bearer ${token}`,
      },
    });
    if (!res.ok) {
      const errText = await res.text().catch(()=>res.statusText);
      throw new Error(errText || `HTTP ${res.status}`);
    }
    const persona = await res.json();
    const html = `
      <h2>Editar Persona</h2>
      <form id="formEditar" style="display:flex;flex-direction:column;gap:8px;max-width:400px;margin:auto;">
        <input type="hidden" id="edit_id" value="${persona.id}">
        <label>Nombre:<input id="edit_nombre" value="${persona.nombre||''}"></label>
        <label>Apellido:<input id="edit_apellido" value="${persona.apellido||''}"></label>
        <label>Carnet:<input id="edit_ci" value="${persona.ci||''}"></label>
        <label>Dirección:<input id="edit_direccion" value="${persona.direccion||''}"></label>
        <label>Teléfono:<input id="edit_telefono" value="${persona.telefono||''}"></label>
        <label>Email:<input id="edit_email" type="email" value="${persona.email||''}"></label>
        <div>
          <button type="submit">Guardar</button>
          <button type="button" id="btnCancelarEditar">Cancelar</button>
        </div>
      </form>
    `;
    document.getElementById("container").innerHTML = html;
    document.getElementById("formEditar").addEventListener("submit", actualizarPersona);
    document.getElementById("btnCancelarEditar").addEventListener("click", () => {
      document.getElementById("container").innerHTML = "";
    });
  } catch (err) {
    console.error("Error al cargar persona:", err);
    alert("No se pudo cargar la persona para editar");
  }
}
// Procesar envío del formulario de edición
async function actualizarPersona(event) {
  event.preventDefault();

  const id = document.getElementById('edit_id').value;
  const token = localStorage.getItem('token');
  const persona = {
    nombre: document.getElementById('edit_nombre').value.trim(),
    apellido: document.getElementById('edit_apellido').value.trim(),
    ci: document.getElementById('edit_ci').value.trim(),
    direccion: document.getElementById('edit_direccion').value.trim(),
    telefono: document.getElementById('edit_telefono').value.trim(),
    email: document.getElementById('edit_email').value.trim(),
  };

  try {
    const res = await fetch(`${API_URL}/personas/${encodeURIComponent(id)}`, {
      method: 'PUT', // usa PATCH si tu API espera PATCH
      headers: {
        'Content-Type': 'application/json',
        Accept: 'application/json',
        Authorization: `Bearer ${token}`,
      },
      body: JSON.stringify(persona),
    });

    const contentType = res.headers.get('content-type');
    const body = contentType && contentType.includes('application/json')
      ? await res.json().catch(() => null)
      : await res.text().catch(() => null);

    if (!res.ok) {
      console.error('Error al actualizar persona:', body);
      // mostrar mensaje de validación si viene en body
      if (res.status === 422 && body && body.errors) {
        const first = Object.values(body.errors)[0];
        alert(first ? first[0] : 'Errores de validación');
      } else {
        throw new Error(body?.message || `HTTP ${res.status}`);
      }
      return;
    }

    alert('Persona actualizada correctamente');
    document.getElementById('container').innerHTML = '';
    listarPersonas();
  } catch (err) {
    console.error('Error al actualizar:', err);
    alert('No se pudo actualizar: ' + (err.message || err));
  }
}
